environment: ""
namespace: ""
name: "test"
project: "test"

serviceAccount:
  create: true
  name: "test"

service:
  enabled: true
  port: 80
  roleArn: arn:aws:iam::xxxx:role

ingress:
  enabled: false
  hosts:
    - example.com

image:
  repository: "1242525:ecr" 
  tag: "242442"
  imagePullPolicy: IfNotPresent

deployment:
  enabled: true
  strategy: RollingUpdate
  replicaCount: 1
  ports:
    - name: http
      internal: 8080
      protocol: TCP
  resources:
    limits:
      cpu: 1.0
      memory: 100Mi
    requests:
      cpu: 1.0
      memory: 100Mi
  env: {}
  envFrom: {}
  command:
    - /bin/sh
    - -c
    - echo Hello World
  args: {}
  
  livenessProbe:
    path: /api/health
    port: 8080
    failureThreshold: 30
    periodSeconds: 10
  readinessProbe:
    path: /api/health
    port: 8080
    failureThreshold: 30
    periodSeconds: 10
  startupProbe:
    path: "/startup"
    port: 8080
    failureThreshold: 30
    periodSeconds: 10
  nodeSelector: {}
  tolerations: []
  affinity: {}

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 1
  targetCPUUtilizationPercentage: 80

doppler:
  required: true
  project: bikelease
  config: dev









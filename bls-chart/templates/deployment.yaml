{{- if .Values.deployment.enabled }}
{{- $imageTag := .Values.image.tag | required "Value is required for .Values.image.tag." -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ .Values.name }}
  labels:
    tags.datadoghq.com/env: {{ .Values.environment }}
    tags.datadoghq.com/service: {{ .Values.name }}
    tags.datadoghq.com/project: {{ .Values.project }}
  annotations:
    secrets.doppler.com/reload: 'true'
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  strategy:
    type: {{ .Values.deployment.strategy }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      name: {{ .Values.name }}
      labels:
        app: {{ .Values.name }}
        tags.datadoghq.com/env: {{ .Values.environment }}
        tags.datadoghq.com/service: {{ .Values.name }}
        tags.datadoghq.com/project: {{ .Values.project }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      containers:
        - name: {{ .Values.name }}
          image: "{{ .Values.image.repository }}:{{ $imageTag }}"
          imagePullPolicy: {{ .Values.image.imagePullPolicy }}
          {{- if .Values.command }}
          command:
            {{- toYaml .Values.deployment.command | nindent 12 }}
          {{- end }}
          {{- if .Values.args }}
          args:
            {{- toYaml .Values.deployment.args | nindent 12 }}
          {{- end }}
          ports:
            {{- range .Values.deployment.ports }}
            - name: {{ .name }}
              containerPort: {{ .containerPort }}
              protocol: {{ .protocol | default "TCP" }}
            {{- end }}
          startupProbe:
            httpGet:
              path: {{ .Values.deployment.startupProbe.path }}
              port: {{ .Values.deployment.startupProbe.port }}
            failureThreshold: {{ .Values.deployment.startupProbe.failureThreshold }}
            periodSeconds: {{ .Values.deployment.startupProbe.periodSeconds }}
          livenessProbe:
            httpGet:
              path: {{ .Values.deployment.livenessProbe.path }}
              port: {{ .Values.deployment.livenessProbe.port }}
            failureThreshold: {{ .Values.deployment.livenessProbe.failureThreshold }}
            periodSeconds: {{ .Values.deployment.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.deployment.readinessProbe.path }}
              port: {{ .Values.deployment.readinessProbe.port }}
            failureThreshold: {{ .Values.deployment.readinessProbe.failureThreshold }}
            periodSeconds: {{ .Values.deployment.readinessProbe.periodSeconds }}
          env:
            {{- range .Values.deployment.env }}
            - name: "{{ .name }}"
              value: "{{ .value }}"
            {{- end }}
          envFrom:
            - secretRef:
                name: dopplersecret-{{ .Values.name }}
          resources:
            limits:
              cpu: {{ .Values.deployment.resources.limits.cpu }}
              memory: {{ .Values.deployment.resources.limits.memory }}
            requests:
              cpu: {{ .Values.deployment.resources.requests.cpu }}
              memory: {{ .Values.deployment.resources.requests.memory }}
      {{- with .Values.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}




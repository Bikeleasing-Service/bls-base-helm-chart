# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Type of Workload
# Possible values: backend / frontend / cronjob / task(job)
# Environment
environment: "int"
replicaCount: 1
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

###############################################
# Application IMAGE Information
###############################################
image:
  repository: ""  # repository path within bls's CICD ECR
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

###############################################
# EKS information
###############################################
namespace: "demo"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using "serviceAccountName" helper
  name: "demo"

###############################################
# Application secrets and Environment variable
###############################################
securityContext: {}

secrets:
  required: true

env: []
  # - name: ""
  #   value: ""
secretRef: []

doppler:
  project: "demo"
  config: int
  
###############################################
# ingress --> service:port --> container:port #
###############################################

service:
  enabled: true
  type: ClusterIP
  port: 8080  # Port that the k8s service will use
  protocol: TCP  # Protocol to use
  name: http  # Name of the port to expose by the container
  roleArn: "demo"

ingress:
  enabled: false
  className: "nginx"
  annotations: {}
  tls: []
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific


deployment:
  strategy: RollingUpdate
  port: 8080


###############################################
# container resource allocation
###############################################

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 128Mi


###############################################
# Service Autoscaling
###############################################
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

###############################################
# Service healthcheck 
###############################################
livenessProbe:
  path: /management/health
  port: {{ .Values.deployment.port }}
  
readinessProbe:
  path: /management/health
  port: {{ .Values.deployment.port }}


###############################################
# Deployment optional setting
###############################################

nodeSelector: {}

tolerations: []

affinity: {}

backoffLimit: 2

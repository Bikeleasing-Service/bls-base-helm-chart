# name: Create Release
# on:
#   push:
#     branches:
#       - main
#   pull_request:

# permissions:
#   contents: write
#   packages: write
#   pull-requests: write

# env:
#   GO_VERSION: 1.21.3

# jobs:
  # changelog:
  #   name: Generate Changelog
  #   if: github.event_name != 'pull_request'
  #   runs-on: ubuntu-latest

  #   outputs:
  #     skipped: ${{ steps.changelog.outputs.skipped }}
  #     tag: ${{ steps.changelog.outputs.tag }}
  #     clean_changelog: ${{ steps.changelog.outputs.clean_changelog }}
  #     version: ${{ steps.changelog.outputs.version }}

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Set up Git
  #       run: |
  #         git config --global user.email "github-actions[bot]@users.noreply.github.com"
  #         git config --global user.name "github-actions[bot]"

  #     - name: Create Changelog
  #       uses: TriPSs/conventional-changelog-action@v5
  #       id: changelog
  #       with:
  #         github-token: ${{ secrets.GITHUB_TOKEN }}
  #         git-user-name: "github-actions[bot]"
  #         git-user-email: "github-actions[bot]@users.noreply.github.com"
  #         skip-git-pull: true
  #         output-file: false
  #         version-file: .github/package.yaml
  #         create-summary: true

  #     - name: Create Pull Request for Changelog
  #       if: steps.changelog.outputs.skipped == 'false'
  #       run: |
  #         gh pr create --base main --title "chore(release): ${{ steps.changelog.outputs.tag }} [skip-ci]" --body "${{ steps.changelog.outputs.clean_changelog }}"
  #       env:
  #         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Approve Pull Request
  #       if: steps.changelog.outputs.skipped == 'false'
  #       run: |
  #         gh pr review --approve ${{ steps.changelog.outputs.tag }}
  #       env:
  #         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Merge Pull Request
  #       if: steps.changelog.outputs.skipped == 'false'
  #       run: |
  #         gh pr merge --squash --auto --delete-branch
  #       env:
  #         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # release:
  #   name: Create Release
  #   needs: changelog
  #   if: github.event_name != 'pull_request' && needs.changelog.outputs.skipped == 'false'
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Create GitHub Release
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         tag_name: ${{ needs.changelog.outputs.tag }}
  #         prerelease: false
  #         draft: false
  #         generate_release_notes: true
  #         name: ${{ needs.changelog.outputs.tag }}
  #         body: |
  #           <details>
  #             <summary>ðŸ¤– Autogenerated Conventional Changelog</summary>

  #             ${{ needs.changelog.outputs.clean_changelog }}
  #           </details>

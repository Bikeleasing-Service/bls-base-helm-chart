name: Create Release with Changelog

on:
  push:
    branches:
        main
      
jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Git
        run: git fetch --tags

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm ci

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libssl-dev pkg-config
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          cargo install git-cliff

      - name: Generate Changelog
        run: git cliff --output CHANGELOG.md --config=.github/cliff.toml --verbose

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub token is automatically provided
        run: npx semantic-release
      
      # Commit the changelog and version bump to the repository
      - name: Commit Changelog and Version Bump
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add CHANGELOG.md  package.json package-lock.json
          git commit -m "chore(release): update changelog and bump version"
          git push origin main

    #   - name: Create GitHub Release
    #     id: create_release
    #     uses: actions/create-release@v1
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     with:
    #       tag_name: ${{ github.sha }}
    #       release_name: Release ${{ github.sha }}
    #       body_path: CHANGELOG.md
    #       draft: false
    #       prerelease: false

    #   - name: Upload assets to release
    #     run: |
    #         for file in ./docs/*.tgz; do
    #         echo "Uploading $file"
    #         gh release upload ${{ steps.create_release.outputs.tag_name }} "$file"
    #         done
    #     env:
    #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}